[{"/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/index.js":"1","/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/App.js":"2","/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/reportWebVitals.js":"3","/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/NavBar.js":"4","/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/About.js":"5","/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/Home.js":"6","/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/Resources.js":"7","/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/News.js":"8","/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/Signin.js":"9","/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/Contact.js":"10","/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/footer.js":"11","/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/Signup.js":"12"},{"size":629,"mtime":1687813591204,"results":"13","hashOfConfig":"14"},{"size":1042,"mtime":1687813591203,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1687813591204,"results":"16","hashOfConfig":"14"},{"size":982,"mtime":1688083149379,"results":"17","hashOfConfig":"14"},{"size":3346,"mtime":1687887338599,"results":"18","hashOfConfig":"14"},{"size":815,"mtime":1687886593634,"results":"19","hashOfConfig":"14"},{"size":165,"mtime":1687813591203,"results":"20","hashOfConfig":"14"},{"size":153,"mtime":1687813591203,"results":"21","hashOfConfig":"14"},{"size":3816,"mtime":1687813591203,"results":"22","hashOfConfig":"14"},{"size":5658,"mtime":1687813591203,"results":"23","hashOfConfig":"14"},{"size":2527,"mtime":1687816818321,"results":"24","hashOfConfig":"14"},{"size":4339,"mtime":1687813591203,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"yo390n",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"29"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/index.js",[],[],[],"/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/App.js",[],[],"/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/reportWebVitals.js",[],[],"/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/NavBar.js",[],[],"/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/About.js",[],[],"/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/Home.js",[],[],"/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/Resources.js",[],[],"/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/News.js",[],[],"/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/Signin.js",[],[],"/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/Contact.js",["65","66","67"],[],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Form, Alert, Button } from 'react-bootstrap';\nimport './Contact.css';\nimport { isEmail } from 'validator';\n\nconst Contact = () => {\n  const [validated, setValidated] = useState(false);\n  const [newContact, setNewContact] = useState({\n    submitter_name: '',\n    submitter_email: '',\n    submitter_phone: '',\n    submitter_message: '',\n  });\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    const validateForm = () => {\n      let newErrors = {};\n\n      if (!newContact.submitter_name) {\n        newErrors.submitter_name = 'Please provide a name.';\n      }\n\n      if (!newContact.submitter_email) {\n        newErrors.submitter_email = 'Please provide an email address.';\n      } else if (!isEmail(newContact.submitter_email)) {\n        newErrors.submitter_email = 'Please provide a valid email address.';\n      }\n\n      if (!newContact.submitter_phone) {\n        newErrors.submitter_phone = 'Please provide a phone number.';\n      } else if (\n        !/^[\\+]?([0-9][\\s]?|[0-9]?)([(][0-9]{3}[)][\\s]?|[0-9]{3}[-\\s\\.]?)[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im.test(\n          newContact.submitter_phone\n        )\n      ) {\n        newErrors.submitter_phone = 'Please provide a valid phone number.';\n      }\n\n      if (!newContact.submitter_message) {\n        newErrors.submitter_message = 'Please provide a message.';\n      }\n\n      setErrors(newErrors);\n    };\n\n    validateForm();\n  }, [newContact]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setNewContact({ ...newContact, [name]: value });\n    setErrors({ ...errors, [name]: undefined });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n    } else {\n      // Process the form submission if there are no errors\n      console.log('Form submitted:', newContact);\n      handleReset();\n    }\n\n    setValidated(true);\n  };\n\n  const handleReset = () => {\n    setNewContact({\n      submitter_name: '',\n      submitter_email: '',\n      submitter_phone: '',\n      submitter_message: '',\n    });\n    setValidated(false);\n    setErrors({});\n  };\n\n  return (\n    <Container>\n      <h3 className=\"mb-4\">CONTACT US</h3>\n      <p>\n        Please use the form below to send comments or suggestions. Your contact information is optional unless you desire a response.\n      </p>\n      <Form\n        noValidate\n        validated={validated}\n        onSubmit={handleSubmit}\n        onReset={handleReset}\n        id=\"contact-form\"\n      >\n        <Row>\n          <Col>\n            <Form.Group className=\"mb-3\" controlId=\"name\">\n              <Form.Label>Name:</Form.Label>\n              <Form.Control\n                required\n                type=\"text\"\n                name=\"submitter_name\"\n                value={newContact.submitter_name}\n                onChange={handleChange}\n                isInvalid={validated && !!errors.submitter_name}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.submitter_name}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"email\">\n              <Form.Label>Email Address:</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"submitter_email\"\n                value={newContact.submitter_email}\n                onChange={handleChange}\n                required\n                isInvalid={validated && !!errors.submitter_email}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.submitter_email}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"phone\">\n              <Form.Label>Phone Number:</Form.Label>\n              <Form.Control\n                type=\"tel\"\n                name=\"submitter_phone\"\n                onChange={handleChange}\n                value={newContact.submitter_phone}\n                required\n                isInvalid={validated && !!errors.submitter_phone}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.submitter_phone}\n              </Form.Control.Feedback>\n              <Form.Text className=\"text-muted\">\n                Specify country code, area code, etc., as applicable.\n              </Form.Text>\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group className=\"mb-5\" controlId=\"message\">\n              <Form.Label>Message:</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={5}\n                name=\"submitter_message\"\n                onChange={handleChange}\n                value={newContact.submitter_message}\n                isInvalid={validated && !!errors.submitter_message}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.submitter_message}\n              </Form.Control.Feedback>\n            </Form.Group>\n          </Col>\n        </Row>\n        <Row className=\"mt-3\">\n          <Col md={2}>\n            <Button variant=\"primary\" type=\"submit\">\n              Send Message\n            </Button>\n          </Col>\n          <Col md={2}>\n            <Button variant=\"outline-primary\" type=\"reset\">\n              Reset\n            </Button>\n          </Col>\n        </Row>\n        {validated && (\n          <Alert variant=\"danger\" className=\"mt-3\">\n            Please fill out all required fields.\n          </Alert>\n        )}\n      </Form>\n    </Container>\n  );\n};\n\nexport default Contact;\n","/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/footer.js",[],[],"/home/lightmean/Code/TUsite/TUCyberClubWebsite/my-app/src/Components/Signup.js",[],[],[],{"ruleId":"68","severity":1,"message":"69","line":33,"column":13,"nodeType":"70","messageId":"71","endLine":33,"endColumn":14,"suggestions":"72"},{"ruleId":"68","severity":1,"message":"73","line":33,"column":69,"nodeType":"70","messageId":"71","endLine":33,"endColumn":70,"suggestions":"74"},{"ruleId":"68","severity":1,"message":"73","line":33,"column":86,"nodeType":"70","messageId":"71","endLine":33,"endColumn":87,"suggestions":"75"},"no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["76","77"],"Unnecessary escape character: \\..",["78","79"],["80","81"],{"messageId":"82","fix":"83","desc":"84"},{"messageId":"85","fix":"86","desc":"87"},{"messageId":"82","fix":"88","desc":"84"},{"messageId":"85","fix":"89","desc":"87"},{"messageId":"82","fix":"90","desc":"84"},{"messageId":"85","fix":"91","desc":"87"},"removeEscape",{"range":"92","text":"93"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"94","text":"95"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"96","text":"93"},{"range":"97","text":"95"},{"range":"98","text":"93"},{"range":"99","text":"95"},[1055,1056],"",[1055,1055],"\\",[1111,1112],[1111,1111],[1128,1129],[1128,1128]]